import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class HacSa extends JFrame {
	
	JTextField tfId = null; // 전역변수로 설정한다.
	JTextField tfName = null;
	JTextField tfDepart = null;
	JTextField tfAddress = null;
	
	JTextArea taList = null;
	
	JButton btnInsert = null;
	JButton btnSelect = null;
	JButton btnUpdate = null;
	JButton btnDelete = null;
	
	public HacSa() {
		this.setTitle("학사 관리");
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		Container c = getContentPane();
		c.setLayout(new FlowLayout());
		
		c.add(new JLabel("학번"));
		this.tfId = new JTextField(20);
		c.add(this.tfId);
		
		c.add(new JLabel("이름"));
		this.tfName = new JTextField(20);
		c.add(tfName);
		
		c.add(new JLabel("학과"));
		this.tfDepart = new JTextField(20);
		c.add(this.tfDepart);
		
		c.add(new JLabel("주소"));
		this.tfAddress = new JTextField(20);
		c.add(this.tfAddress);
		
		this.taList = new JTextArea(10, 23);
		c.add(new JScrollPane(this.taList));
		
		this.btnInsert = new JButton("등록");
		c.add(this.btnInsert);
		this.btnInsert.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				
				try {
					if(tfId.getText().equals("")) {
						JOptionPane.showMessageDialog(null, "학번을 등록해주세요.");
						return;
					}
					if(tfName.getText().length()==0) {
						JOptionPane.showMessageDialog(null, "이름을 등록해주세요.");
						return;
					}
					if(tfDepart.getText().equals("")) {
						JOptionPane.showMessageDialog(null, "학과를 등록해주세요.");
						return;
					}
					if(tfAddress.getText().equals("")) {
						JOptionPane.showMessageDialog(null, "주소를 등록해주세요.");
						return;
					}
					JOptionPane.showMessageDialog(null, "등록 되었습니다.");
					Class.forName("oracle.jdbc.driver.OracleDriver");
					Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","ora_user","hong");
					Statement stmt = conn.createStatement();
					//insert   자바로 짠 코드는 자동으로 commit이 된다.
					stmt.executeUpdate("insert into student( id, name, dept, address) values('"+tfId.getText()+"', '"+tfName.getText()+ "', '" + tfDepart.getText()+"', '"+ tfAddress.getText() +"')"); //  ora_user의 테이블 값과 순서가 일치 해야한다.
					
					//목록 초기화
					taList.setText("");
					ResultSet rs = stmt.executeQuery("select*from student"); 
					taList.append("이름 \t");
					taList.append("학번 \t");
					taList.append("학과 \t");
					taList.append("주소 \n");
					taList.append("===================================== \n");
					
					while(rs.next()) {
						taList.append(rs.getString("name") + "\t"); // text field에 이름이 출력
						taList.append(rs.getString("id") + "\t"); 
						taList.append(rs.getString("dept") + "\t"); 
						taList.append(rs.getString("address") + "\n");
					}
					
					rs.close();
					stmt.close();
					conn.close(); 
				} catch (Exception e1) {
					e1.printStackTrace();
				} 
				
			}
		});
		
		this.btnSelect = new JButton("목록");
		c.add(this.btnSelect);
		this.btnSelect.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					Class.forName("oracle.jdbc.driver.OracleDriver");
					Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","ora_user","hong");
					Statement stmt = conn.createStatement();
					
					//목록 초기화
					taList.setText("");
					
					ResultSet rs = stmt.executeQuery("select*from student"); 
					taList.append("이름 \t");
					taList.append("학번 \t");
					taList.append("학과 \t");
					taList.append("주소 \n");
					taList.append("=================================================== \n");
					
					while(rs.next()) {
						taList.append(rs.getString("name") + "\t"); // text field에 이름이 출력
						taList.append(rs.getString("id") + "\t"); 
						taList.append(rs.getString("dept") + "\t"); 
						taList.append(rs.getString("address") + "\n"); 
					}
					rs.close();
					stmt.close();
					conn.close(); 
				} catch (Exception e1) {
					e1.printStackTrace();
				} 
				
			}
		});
		
		
		this.btnUpdate = new JButton("수정");
		c.add(this.btnUpdate);
		this.btnUpdate.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					//oracle jdbc드라이버 로드
					Class.forName("oracle.jdbc.driver.OracleDriver");// jdbc driver load, 패키지.CLASS이름
					//Connection
					Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","ora_user","hong");// xe : 전역 데이터베이스 이름(sid), ora_user: ID, hong:PW
					//
					System.out.println("연결완료");
					Statement stmt = conn.createStatement();

					//update
					stmt.executeUpdate("update student set name='"+ tfName.getText() +"', dept='"+ tfDepart.getText() +"', address='"+ tfAddress.getText() +"' where id = '"+ tfId.getText() +"'"); 
					
					//목록 초기화
					taList.setText("");
					
					ResultSet rs = stmt.executeQuery("select*from student"); // ora_user서버에 있는 student 테이블을 읽는다.
					taList.append("이름 \t");
					taList.append("학번 \t");
					taList.append("학과 \t");
					taList.append("주소 \n");
					taList.append("=================================================== \n");
					
					while(rs.next()) {
						taList.append(rs.getString("name") + "\t"); // text field에 이름이 출력
						taList.append(rs.getString("id") + "\t"); 
						taList.append(rs.getString("dept") + "\t"); 
						taList.append(rs.getString("address") + "\n"); 
						
					}
					rs.close();
					stmt.close();
					conn.close(); // 가장 마지막에 열어 놓은 것부터 close를 한다.
				} catch (Exception e1) {
					e1.printStackTrace();
				} 
				
			}
		});
		
		this.btnDelete = new JButton("삭제");
		c.add(this.btnDelete);
		this.btnDelete.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					Class.forName("oracle.jdbc.driver.OracleDriver");
					Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","ora_user","hong");
					Statement stmt = conn.createStatement();
					
					//delete
					int result = JOptionPane.showConfirmDialog(null, "삭제하시겠습니까?", "알림", JOptionPane.YES_NO_OPTION);
					System.out.println(result); //yes = 0, no = 1, x버튼 = -1
					if (result == JOptionPane.YES_OPTION) {
						JOptionPane.showMessageDialog(null, "삭제 되었습니다.");
					}
					
					stmt.executeUpdate("delete from student where id = '"+tfId.getText()+"'");
					
					//목록 초기화
					taList.setText("");
					
					ResultSet rs = stmt.executeQuery("select*from student"); 
					taList.append("이름 \t");
					taList.append("학번 \t");
					taList.append("학과 \t");
					taList.append("주소 \n");
					taList.append("===================================== \n");
					
					while(rs.next()) {
						taList.append(rs.getString("name") + "\t"); // text field에 이름이 출력
						taList.append(rs.getString("id") + "\t"); 
						taList.append(rs.getString("dept") + "\t"); 
						taList.append(rs.getString("address") + "\n");
					}
					rs.close();
					stmt.close();
					conn.close(); 
				} catch (Exception e1) {
					e1.printStackTrace();
				} 
				
			}
		});
		
		
		this.setSize(300, 500);
		this.setVisible(true);
	}
	
	public static void main(String[] args) {
		new HacSa();

	}

}
